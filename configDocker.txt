criar um arquivo dockerFile.dk
criar um arquivio .dockerignore add node_module, .git, .vscode

FROM node:laste

WORKDIR /usr/app

COPY packe.json ./

RUN npm install

COPY . .

EXPOSE 3333

CMD ["npm","run","dev"]

agora vms executar o dockerFile e gerar um imagem com container que vai rodar essa imagem node

execute o seguinte comando:

$ docker build -t mrbookclient .

Em seguida vms rodar essa imagen que foi criada, utilizando o seguinte comando:

$ docker run --name rentxcar -p 3333:3333 mrbookclient

Pronto, imagem rodando!

#DOCKER COMPOSE

- criar arquivo docker-compose.yml

#version: "3.7"

#services: (servições de nossa aplicação, por exemplo: redis, postres, filas e etc)
  app: (iremos orquestrar os containers)
    build: . (executar a construção das img)
    container_name: rentx
    ports:	(mapeamento das portas p container)
	- 3333:3333	
    volumes:
	-.:/usr/app	(estamos copiando todos os arquivos da pasta raís e colando dentro do diretório /user/app no docker-compose)

#comandos
$ docker-compose up -d
$ docker-compose down -v --rmi local
$ docker-compose start
$ docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' NOME_CONTAINER
$ docker exec NOME_IMAGE cat /etc/hosts
$ docker exec -it NOME_CONTAINER /bin/bash
$ docker logs rentex -f
$ docker ps
$ docker ps -a
$ docker start NOME_CONATINER
$ docker rm NOME_CONTAINER

#CONFIGURANDO BANCO DADOS POSTGRES

#version: "3.7"

#services: 
  database_ignite: (nome do serviço, neste caso trata-se de um banco de dados)
    image: postgres (imagem do banco postgres)
    container_name: database_ignite (nome do container)
    restart: always (politca de restarting)
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=ignite
      - POSTGRES_DB=rentx
    volumes:
      - pgdata:/data/postgres
    network_mode: host (estamos dizendo que este serviço irá trabalhar na rede local)

  app: 
    build: . 
    container_name: rentx
    ports:	
	- 3333:3333	
    volumes:
	-.:/usr/app
    network_mode: host

    links:
      - database_ignite
    depends_on:
      - database_ignite

volumes:
  pgdata: (criando nosso volume q na prática será uma pasta que armazena endereço da banco)
    driver: local	(estamos dizendo que base de dados será armazenados localmente no servidor, poderia ser local externo tmb)


É um problema da versão do docker-compose. Eles explicam neste link:
https://www.notion.so/Refatora-o-com-network_mode-e-reload-4500fc0d075349ac9b97d670e734d41b

Basicamente, da versão 1.28 para cima o docker-compose não aceita ter o atributos ports e network_mode: host no mesmo docker-compose.yml.
A solução é apagar o network_mode e adicionar as propriedades links e depends_on no serviço do app.